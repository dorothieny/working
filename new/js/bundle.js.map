{"version":3,"sources":["webpack://pack/./js/script.js"],"names":["node","document","body","childNodes","nodeName","console","log","Promise","resolve","reject","setTimeout","name","price","then","data","status","modify","catch","error","finally"],"mappings":"mBACA,IAAI,IAAIA,KAAQC,SAASC,KAAKC,WACN,SAAjBH,EAAKI,UAGRC,QAAQC,IAAIN,GAGJ,IAAIO,SAAQ,CAACC,EAASC,KAClCC,YAAW,KACRL,QAAQC,IAAI,qBAKXE,EAJgB,CACZG,KAAK,KACLC,MAAO,QAGb,QAGEC,MAAMC,GACA,IAAIP,SAAQ,CAACC,EAASC,KACzBC,YAAW,KACdI,EAAKC,OAAS,QACdP,EAAQM,KACN,UAEHD,MAAMC,IACLA,EAAKE,QAAS,EACdX,QAAQC,IAAIQ,MACbG,OAAM,KACLZ,QAAQa,MAAM,aACfC,SAAQ,KACPd,QAAQC,IAAI,e","file":"bundle.js","sourcesContent":["'use strict';\nfor(let node of document.body.childNodes){\n    if(node.nodeName == \"#text\"){\n        continue;\n    }\n    console.log(node);\n}\n\nconst req = new Promise((resolve, reject)=>{\nsetTimeout(()=>{\n   console.log(\"Подготовка данных\");\n    const product = {\n        name:'TV',\n        price: 2000\n    };\n    resolve(product);\n},2000);\n});\n\nreq.then((data)=>{\n   return new Promise((resolve, reject) =>{\n       setTimeout(()=>{\n    data.status = 'order';\n    resolve(data);\n   }, 2000);\n});\n}).then((data)=>{\n    data.modify = true;\n    console.log(data);\n}).catch(()=>{\n    console.error('Ошибка');\n}).finally(() =>{\n    console.log('finally');\n});"],"sourceRoot":""}